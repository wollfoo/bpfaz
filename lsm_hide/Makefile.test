# Test Makefile cho Optimized LSM Hide

OUTPUT := ./test_output
BPF_OBJ := $(OUTPUT)/test_optimized.o
SKEL_H := $(OUTPUT)/test_optimized.skel.h

# BPF compilation flags
BPF_CFLAGS := -g -O2 -Wall -target bpf -mcpu=v3
BPF_CFLAGS += -D__TARGET_ARCH_x86
BPF_CFLAGS += -DKBUILD_MODNAME='"test_optimized"'
BPF_CFLAGS += -I/usr/include/bpf -I.

# User-space compilation flags
CFLAGS := -g -Wall -I$(OUTPUT)
LIBS := -lbpf -lelf -lz

.PHONY: all clean test

all: $(OUTPUT)/test_loader

$(OUTPUT):
	mkdir -p $(OUTPUT)

# Compile BPF program
$(BPF_OBJ): test_optimized.c | $(OUTPUT)
	clang $(BPF_CFLAGS) -c test_optimized.c -o $(BPF_OBJ)

# Generate skeleton
$(SKEL_H): $(BPF_OBJ)
	bpftool gen skeleton $(BPF_OBJ) > $(SKEL_H)

# Compile user-space loader
$(OUTPUT)/test_loader: test_loader.c $(SKEL_H)
	cc $(CFLAGS) test_loader.c -o $(OUTPUT)/test_loader $(LIBS)

test: $(OUTPUT)/test_loader
	@echo "Test build complete. Run with:"
	@echo "  sudo $(OUTPUT)/test_loader [PID_to_hide]"

clean:
	rm -rf $(OUTPUT)
